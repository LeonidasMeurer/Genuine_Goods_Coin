"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/listed_for_sale",{

/***/ "./pages/Web3Client.js":
/*!*****************************!*\
  !*** ./pages/Web3Client.js ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"buyNft\": function() { return /* binding */ buyNft; },\n/* harmony export */   \"fetchNftsForSale\": function() { return /* binding */ fetchNftsForSale; },\n/* harmony export */   \"goodsNFTContract\": function() { return /* binding */ goodsNFTContract; },\n/* harmony export */   \"marketContract\": function() { return /* binding */ marketContract; },\n/* harmony export */   \"pradaNFTContract\": function() { return /* binding */ pradaNFTContract; }\n/* harmony export */ });\n/* harmony import */ var contracts_GoodsNFT_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! contracts/GoodsNFT.json */ \"./ethereum/build/contracts/GoodsNFT.json\");\n/* harmony import */ var contracts_PradaNFT_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! contracts/PradaNFT.json */ \"./ethereum/build/contracts/PradaNFT.json\");\n/* harmony import */ var contracts_Market_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! contracts/Market.json */ \"./ethereum/build/contracts/Market.json\");\n/* harmony import */ var web3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3 */ \"./node_modules/web3/lib/esm/index.js\");\n\n\n\n\nlet web3Instance;\nlet goodsNFTContract;\nlet pradaNFTContract;\nlet marketContract;\nconst ifpsToPicture = new Map();\nifpsToPicture.set(\"ipfs://bafkreibv7ugie5cj7xpl3hk6c3rrmk3kgtgkex4czyccrywsy6bhmzcire\", \"https://bafybeibh7bttqvwxuadnatdgqwb57j3am6dmpn6bsomx2sypagdnl5os3i.ipfs.nftstorage.link/\");\nifpsToPicture.set(\"ipfs://bafkreigdeafb7xsb3z6unl3wpepscivp4tgzwzir3ii27kiapckxcdjoem\", \"https://bafybeiaef4ijjz4xq6k6w6gzguygubj4ktq3vlqjbpbudtgb35wck32yla.ipfs.nftstorage.link/\");\nconst init = async ()=>{\n    const loadWeb3 = async ()=>{\n        if (window.ethereum) {\n            window.web3 = new web3__WEBPACK_IMPORTED_MODULE_3__[\"default\"](window.ethereum);\n            await window.ethereum.enable();\n            web3Instance = window.web3;\n        }\n    };\n    await loadWeb3();\n    const loadGoodsNFTContract = async ()=>{\n        try {\n            const networkId = await web3Instance.eth.net.getId();\n            const deployedNetwork = contracts_GoodsNFT_json__WEBPACK_IMPORTED_MODULE_0__.networks[networkId];\n            goodsNFTContract = new web3Instance.eth.Contract(contracts_GoodsNFT_json__WEBPACK_IMPORTED_MODULE_0__.abi, deployedNetwork && deployedNetwork.address);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    await loadGoodsNFTContract();\n    const loadPradaNFTContract = async ()=>{\n        try {\n            const networkId = await web3Instance.eth.net.getId();\n            const deployedNetwork = contracts_PradaNFT_json__WEBPACK_IMPORTED_MODULE_1__.networks[networkId];\n            pradaNFTContract = new web3Instance.eth.Contract(contracts_PradaNFT_json__WEBPACK_IMPORTED_MODULE_1__.abi, deployedNetwork && deployedNetwork.address);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    await loadPradaNFTContract();\n    const loadMarketContract = async ()=>{\n        try {\n            const networkId = await web3Instance.eth.net.getId();\n            const deployedNetwork = contracts_Market_json__WEBPACK_IMPORTED_MODULE_2__.networks[networkId];\n            marketContract = new web3Instance.eth.Contract(contracts_Market_json__WEBPACK_IMPORTED_MODULE_2__.abi, deployedNetwork && deployedNetwork.address);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    await loadMarketContract();\n};\ninit();\nconst fetchNftsForSale = async ()=>{\n    const tokenList = [];\n    if (marketContract) {\n        let tokenURI = \"\";\n        const tokensOnSale = await marketContract.methods.getTokensOnSale().call();\n        try {\n            for(let i = 0; i < tokensOnSale.length; i++){\n                const token = await marketContract.methods.getListing(i + 1).call();\n                console.log(token.token);\n                console.log(goodsNFTContract._address);\n                if (token.token == goodsNFTContract._address) {\n                    console.log(true);\n                    tokenURI = await goodsNFTContract.methods.tokenURI(Number(tokensOnSale[i].tokenId)).call();\n                } else {\n                    console.log(false);\n                    tokenURI = await pradaNFTContract.methods.tokenURI(Number(tokensOnSale[i].tokenId)).call();\n                }\n                // const tokenURI = await goodsNFTContract.methods.tokenURI(Number(tokensOnSale[i].tokenId)).call();\n                tokenList.push({\n                    \"tokenId\": Number(token.tokenId),\n                    \"seller\": token.seller,\n                    \"token\": token.token,\n                    \"price\": Number(token.price),\n                    \"picture\": ifpsToPicture.get(tokenURI),\n                    \"buy\": \"Buy Now!\",\n                    \"number\": i + 1,\n                    \"status\": Number(token.status)\n                });\n            }\n        // setNftsForSale(tokenList);\n        } catch (error) {\n            console.error(error);\n            alert(\"Failed to load!\");\n        }\n    }\n    return tokenList;\n};\nconst buyNft = async (listId, price)=>{\n    try {\n        await marketContract.methods.buyToken(listId).send({\n            from: account,\n            value: price\n        });\n    } catch (error) {\n        console.error(error);\n        alert(\"Failed to load!\");\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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eEMsY0FBY3lDLElBQUloQjtvQkFDN0IsT0FBTztvQkFDUCxVQUFVSyxJQUFJO29CQUNkLFVBQVVNLE9BQU9KLE1BQU1VO2dCQUMzQjtZQUNKO1FBQ0EsNkJBQTZCO1FBRWpDLEVBQUUsT0FBT3ZCLE9BQU87WUFDWkMsUUFBUUQsTUFBTUE7WUFDZHdCLE1BQU07UUFDVjtJQUNKO0lBQ0EsT0FBT25CO0FBQ1gsRUFBRTtBQUVLLE1BQU1vQixTQUFTLE9BQU9DLFFBQVFMO0lBQzdCLElBQUk7UUFDQSxNQUFNekMsZUFBZTRCLFFBQVFtQixTQUFTRCxRQUFRRSxLQUFLO1lBQUVDLE1BQU1DO1lBQVNDLE9BQU9WO1FBQU07SUFDckYsRUFBRSxPQUFPckIsT0FBTztRQUNaQyxRQUFRRCxNQUFNQTtRQUNkd0IsTUFBTTtJQUNWO0FBQ1IsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9wYWdlcy9XZWIzQ2xpZW50LmpzPzI1NmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdvb2RzTkZUQnVpbGQgZnJvbSAnY29udHJhY3RzL0dvb2RzTkZULmpzb24nO1xuaW1wb3J0IFByYWRhTkZUQnVpbGQgZnJvbSAnY29udHJhY3RzL1ByYWRhTkZULmpzb24nO1xuaW1wb3J0IE1hcmtldEJ1aWxkIGZyb20gJ2NvbnRyYWN0cy9NYXJrZXQuanNvbic7XG5pbXBvcnQgV2ViMyBmcm9tICd3ZWIzJztcblxubGV0IHdlYjNJbnN0YW5jZTtcbmV4cG9ydCBsZXQgZ29vZHNORlRDb250cmFjdDtcbmV4cG9ydCBsZXQgcHJhZGFORlRDb250cmFjdDtcbmV4cG9ydCBsZXQgbWFya2V0Q29udHJhY3Q7XG5cbmNvbnN0IGlmcHNUb1BpY3R1cmUgPSBuZXcgTWFwKCk7XG4gICAgaWZwc1RvUGljdHVyZS5zZXQoXG4gICAgICAgIFwiaXBmczovL2JhZmtyZWlidjd1Z2llNWNqN3hwbDNoazZjM3JybWsza2d0Z2tleDRjenljY3J5d3N5NmJobXpjaXJlXCIsXG4gICAgICAgIFwiaHR0cHM6Ly9iYWZ5YmVpYmg3YnR0cXZ3eHVhZG5hdGRncXdiNTdqM2FtNmRtcG42YnNvbXgyc3lwYWdkbmw1b3MzaS5pcGZzLm5mdHN0b3JhZ2UubGluay9cIlxuICAgIClcbiAgICBpZnBzVG9QaWN0dXJlLnNldChcbiAgICAgICAgXCJpcGZzOi8vYmFma3JlaWdkZWFmYjd4c2IzejZ1bmwzd3BlcHNjaXZwNHRnend6aXIzaWkyN2tpYXBja3hjZGpvZW1cIixcbiAgICAgICAgXCJodHRwczovL2JhZnliZWlhZWY0aWpqejR4cTZrNnc2Z3pndXlndWJqNGt0cTN2bHFqYnBidWR0Z2IzNXdjazMyeWxhLmlwZnMubmZ0c3RvcmFnZS5saW5rL1wiXG4gICAgKVxuXG5cbmNvbnN0IGluaXQgPSBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgbG9hZFdlYjMgPSBhc3luYyAoKSA9PiB7XG4gICAgICAgIGlmICh3aW5kb3cuZXRoZXJldW0pIHtcbiAgICAgICAgICAgIHdpbmRvdy53ZWIzID0gbmV3IFdlYjMod2luZG93LmV0aGVyZXVtKTtcbiAgICAgICAgICAgIGF3YWl0IHdpbmRvdy5ldGhlcmV1bS5lbmFibGUoKTtcbiAgICAgICAgICAgIHdlYjNJbnN0YW5jZSA9IHdpbmRvdy53ZWIzO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBhd2FpdCBsb2FkV2ViMygpO1xuXG4gICAgY29uc3QgbG9hZEdvb2RzTkZUQ29udHJhY3QgPSBhc3luYyAoKSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBuZXR3b3JrSWQgPSBhd2FpdCB3ZWIzSW5zdGFuY2UuZXRoLm5ldC5nZXRJZCgpO1xuICAgICAgICAgICAgY29uc3QgZGVwbG95ZWROZXR3b3JrID0gR29vZHNORlRCdWlsZC5uZXR3b3Jrc1tuZXR3b3JrSWRdO1xuICAgICAgICAgICAgZ29vZHNORlRDb250cmFjdCA9IG5ldyB3ZWIzSW5zdGFuY2UuZXRoLkNvbnRyYWN0KFxuICAgICAgICAgICAgICAgIEdvb2RzTkZUQnVpbGQuYWJpLFxuICAgICAgICAgICAgICAgIGRlcGxveWVkTmV0d29yayAmJiBkZXBsb3llZE5ldHdvcmsuYWRkcmVzc1xuICAgICAgICAgICAgKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBhd2FpdCBsb2FkR29vZHNORlRDb250cmFjdCgpO1xuXG4gICAgY29uc3QgbG9hZFByYWRhTkZUQ29udHJhY3QgPSBhc3luYyAoKSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBuZXR3b3JrSWQgPSBhd2FpdCB3ZWIzSW5zdGFuY2UuZXRoLm5ldC5nZXRJZCgpO1xuICAgICAgICAgICAgY29uc3QgZGVwbG95ZWROZXR3b3JrID0gUHJhZGFORlRCdWlsZC5uZXR3b3Jrc1tuZXR3b3JrSWRdO1xuICAgICAgICAgICAgcHJhZGFORlRDb250cmFjdCA9IG5ldyB3ZWIzSW5zdGFuY2UuZXRoLkNvbnRyYWN0KFxuICAgICAgICAgICAgICAgIFByYWRhTkZUQnVpbGQuYWJpLFxuICAgICAgICAgICAgICAgIGRlcGxveWVkTmV0d29yayAmJiBkZXBsb3llZE5ldHdvcmsuYWRkcmVzc1xuICAgICAgICAgICAgKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBhd2FpdCBsb2FkUHJhZGFORlRDb250cmFjdCgpO1xuXG5cbiAgICBjb25zdCBsb2FkTWFya2V0Q29udHJhY3QgPSBhc3luYyAoKSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBuZXR3b3JrSWQgPSBhd2FpdCB3ZWIzSW5zdGFuY2UuZXRoLm5ldC5nZXRJZCgpO1xuICAgICAgICAgICAgY29uc3QgZGVwbG95ZWROZXR3b3JrID0gTWFya2V0QnVpbGQubmV0d29ya3NbbmV0d29ya0lkXTtcbiAgICAgICAgICAgIG1hcmtldENvbnRyYWN0ID0gbmV3IHdlYjNJbnN0YW5jZS5ldGguQ29udHJhY3QoXG4gICAgICAgICAgICAgICAgTWFya2V0QnVpbGQuYWJpLFxuICAgICAgICAgICAgICAgIGRlcGxveWVkTmV0d29yayAmJiBkZXBsb3llZE5ldHdvcmsuYWRkcmVzc1xuICAgICAgICAgICAgKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBhd2FpdCBsb2FkTWFya2V0Q29udHJhY3QoKTtcbn1cblxuaW5pdCgpO1xuXG5leHBvcnQgY29uc3QgZmV0Y2hOZnRzRm9yU2FsZSA9IGFzeW5jICgpID0+IHtcbiAgICBjb25zdCB0b2tlbkxpc3QgPSBbXTtcbiAgICBpZiAobWFya2V0Q29udHJhY3QpIHtcbiAgICAgICAgbGV0IHRva2VuVVJJID0gXCJcIjtcbiAgICAgICAgY29uc3QgdG9rZW5zT25TYWxlID0gYXdhaXQgbWFya2V0Q29udHJhY3QubWV0aG9kcy5nZXRUb2tlbnNPblNhbGUoKS5jYWxsKCk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRva2Vuc09uU2FsZS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRva2VuID0gYXdhaXQgbWFya2V0Q29udHJhY3QubWV0aG9kcy5nZXRMaXN0aW5nKGkgKyAxKS5jYWxsKCk7XG5cbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0b2tlbi50b2tlbik7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZ29vZHNORlRDb250cmFjdC5fYWRkcmVzcylcbiAgICAgICAgICAgICAgICBpZih0b2tlbi50b2tlbiA9PSBnb29kc05GVENvbnRyYWN0Ll9hZGRyZXNzKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRydWUpXG4gICAgICAgICAgICAgICAgICAgIHRva2VuVVJJID0gYXdhaXQgZ29vZHNORlRDb250cmFjdC5tZXRob2RzLnRva2VuVVJJKE51bWJlcih0b2tlbnNPblNhbGVbaV0udG9rZW5JZCkpLmNhbGwoKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhmYWxzZSlcbiAgICAgICAgICAgICAgICAgICAgdG9rZW5VUkkgPSBhd2FpdCBwcmFkYU5GVENvbnRyYWN0Lm1ldGhvZHMudG9rZW5VUkkoTnVtYmVyKHRva2Vuc09uU2FsZVtpXS50b2tlbklkKSkuY2FsbCgpO1xuICAgICAgICAgICAgICAgIH1cblxuXG4gICAgICAgICAgICAgICAgLy8gY29uc3QgdG9rZW5VUkkgPSBhd2FpdCBnb29kc05GVENvbnRyYWN0Lm1ldGhvZHMudG9rZW5VUkkoTnVtYmVyKHRva2Vuc09uU2FsZVtpXS50b2tlbklkKSkuY2FsbCgpO1xuXG4gICAgICAgICAgICAgICAgdG9rZW5MaXN0LnB1c2goe1xuICAgICAgICAgICAgICAgICAgICBcInRva2VuSWRcIjogTnVtYmVyKHRva2VuLnRva2VuSWQpLFxuICAgICAgICAgICAgICAgICAgICBcInNlbGxlclwiOiB0b2tlbi5zZWxsZXIsXG4gICAgICAgICAgICAgICAgICAgIFwidG9rZW5cIjogdG9rZW4udG9rZW4sXG4gICAgICAgICAgICAgICAgICAgIFwicHJpY2VcIjogTnVtYmVyKHRva2VuLnByaWNlKSxcbiAgICAgICAgICAgICAgICAgICAgXCJwaWN0dXJlXCI6IGlmcHNUb1BpY3R1cmUuZ2V0KHRva2VuVVJJKSxcbiAgICAgICAgICAgICAgICAgICAgXCJidXlcIjogXCJCdXkgTm93IVwiLFxuICAgICAgICAgICAgICAgICAgICBcIm51bWJlclwiOiBpICsgMSxcbiAgICAgICAgICAgICAgICAgICAgXCJzdGF0dXNcIjogTnVtYmVyKHRva2VuLnN0YXR1cyksXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIHNldE5mdHNGb3JTYWxlKHRva2VuTGlzdCk7XG4gICAgICAgICAgICBcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICAgICAgICAgICAgYWxlcnQoXCJGYWlsZWQgdG8gbG9hZCFcIik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRva2VuTGlzdDtcbn07XG5cbmV4cG9ydCBjb25zdCBidXlOZnQgPSBhc3luYyAobGlzdElkLCBwcmljZSkgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgYXdhaXQgbWFya2V0Q29udHJhY3QubWV0aG9kcy5idXlUb2tlbihsaXN0SWQpLnNlbmQoeyBmcm9tOiBhY2NvdW50LCB2YWx1ZTogcHJpY2UgfSk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICAgICAgICAgIGFsZXJ0KFwiRmFpbGVkIHRvIGxvYWQhXCIpO1xuICAgICAgICB9XG59XG5cblxuXG5cbiJdLCJuYW1lcyI6WyJHb29kc05GVEJ1aWxkIiwiUHJhZGFORlRCdWlsZCIsIk1hcmtldEJ1aWxkIiwiV2ViMyIsIndlYjNJbnN0YW5jZSIsImdvb2RzTkZUQ29udHJhY3QiLCJwcmFkYU5GVENvbnRyYWN0IiwibWFya2V0Q29udHJhY3QiLCJpZnBzVG9QaWN0dXJlIiwiTWFwIiwic2V0IiwiaW5pdCIsImxvYWRXZWIzIiwid2luZG93IiwiZXRoZXJldW0iLCJ3ZWIzIiwiZW5hYmxlIiwibG9hZEdvb2RzTkZUQ29udHJhY3QiLCJuZXR3b3JrSWQiLCJldGgiLCJuZXQiLCJnZXRJZCIsImRlcGxveWVkTmV0d29yayIsIm5ldHdvcmtzIiwiQ29udHJhY3QiLCJhYmkiLCJhZGRyZXNzIiwiZXJyb3IiLCJjb25zb2xlIiwibG9hZFByYWRhTkZUQ29udHJhY3QiLCJsb2FkTWFya2V0Q29udHJhY3QiLCJmZXRjaE5mdHNGb3JTYWxlIiwidG9rZW5MaXN0IiwidG9rZW5VUkkiLCJ0b2tlbnNPblNhbGUiLCJtZXRob2RzIiwiZ2V0VG9rZW5zT25TYWxlIiwiY2FsbCIsImkiLCJsZW5ndGgiLCJ0b2tlbiIsImdldExpc3RpbmciLCJsb2ciLCJfYWRkcmVzcyIsIk51bWJlciIsInRva2VuSWQiLCJwdXNoIiwic2VsbGVyIiwicHJpY2UiLCJnZXQiLCJzdGF0dXMiLCJhbGVydCIsImJ1eU5mdCIsImxpc3RJZCIsImJ1eVRva2VuIiwic2VuZCIsImZyb20iLCJhY2NvdW50IiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/Web3Client.js\n"));

/***/ })

});