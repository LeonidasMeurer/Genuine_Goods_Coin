"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/listed_for_sale",{

/***/ "./pages/Web3Client.js":
/*!*****************************!*\
  !*** ./pages/Web3Client.js ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"buyNft\": function() { return /* binding */ buyNft; },\n/* harmony export */   \"fetchNftsForSale\": function() { return /* binding */ fetchNftsForSale; },\n/* harmony export */   \"goodsNFTContract\": function() { return /* binding */ goodsNFTContract; },\n/* harmony export */   \"marketContract\": function() { return /* binding */ marketContract; },\n/* harmony export */   \"pradaNFTContract\": function() { return /* binding */ pradaNFTContract; }\n/* harmony export */ });\n/* harmony import */ var contracts_GoodsNFT_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! contracts/GoodsNFT.json */ \"./ethereum/build/contracts/GoodsNFT.json\");\n/* harmony import */ var contracts_PradaNFT_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! contracts/PradaNFT.json */ \"./ethereum/build/contracts/PradaNFT.json\");\n/* harmony import */ var contracts_Market_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! contracts/Market.json */ \"./ethereum/build/contracts/Market.json\");\n/* harmony import */ var web3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3 */ \"./node_modules/web3/lib/esm/index.js\");\n\n\n\n\nlet web3Instance;\nlet account;\nlet goodsNFTContract;\nlet pradaNFTContract;\nlet marketContract;\nconst ifpsToPicture = new Map();\nifpsToPicture.set(\"ipfs://bafkreibv7ugie5cj7xpl3hk6c3rrmk3kgtgkex4czyccrywsy6bhmzcire\", \"https://bafybeibh7bttqvwxuadnatdgqwb57j3am6dmpn6bsomx2sypagdnl5os3i.ipfs.nftstorage.link/\");\nifpsToPicture.set(\"ipfs://bafkreigdeafb7xsb3z6unl3wpepscivp4tgzwzir3ii27kiapckxcdjoem\", \"https://bafybeiaef4ijjz4xq6k6w6gzguygubj4ktq3vlqjbpbudtgb35wck32yla.ipfs.nftstorage.link/\");\nconst init = async ()=>{\n    const loadWeb3 = async ()=>{\n        if (window.ethereum) {\n            window.web3 = new web3__WEBPACK_IMPORTED_MODULE_3__[\"default\"](window.ethereum);\n            await window.ethereum.enable();\n            web3Instance = window.web3;\n        }\n    };\n    await loadWeb3();\n    const loadAccount = async ()=>{\n        const accounts = await web3Instance.eth.getAccounts();\n        account = accounts[0];\n    };\n    await loadAccount();\n    const loadGoodsNFTContract = async ()=>{\n        try {\n            const networkId = await web3Instance.eth.net.getId();\n            const deployedNetwork = contracts_GoodsNFT_json__WEBPACK_IMPORTED_MODULE_0__.networks[networkId];\n            goodsNFTContract = new web3Instance.eth.Contract(contracts_GoodsNFT_json__WEBPACK_IMPORTED_MODULE_0__.abi, deployedNetwork && deployedNetwork.address);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    await loadGoodsNFTContract();\n    const loadPradaNFTContract = async ()=>{\n        try {\n            const networkId = await web3Instance.eth.net.getId();\n            const deployedNetwork = contracts_PradaNFT_json__WEBPACK_IMPORTED_MODULE_1__.networks[networkId];\n            pradaNFTContract = new web3Instance.eth.Contract(contracts_PradaNFT_json__WEBPACK_IMPORTED_MODULE_1__.abi, deployedNetwork && deployedNetwork.address);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    await loadPradaNFTContract();\n    const loadMarketContract = async ()=>{\n        try {\n            const networkId = await web3Instance.eth.net.getId();\n            const deployedNetwork = contracts_Market_json__WEBPACK_IMPORTED_MODULE_2__.networks[networkId];\n            marketContract = new web3Instance.eth.Contract(contracts_Market_json__WEBPACK_IMPORTED_MODULE_2__.abi, deployedNetwork && deployedNetwork.address);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    await loadMarketContract();\n};\ninit();\nconst fetchNftsForSale = async ()=>{\n    const tokenList = [];\n    if (marketContract) {\n        let tokenURI = \"\";\n        const tokensOnSale = await marketContract.methods.getTokensOnSale().call();\n        try {\n            for(let i = 0; i < tokensOnSale.length; i++){\n                const token = await marketContract.methods.getListing(i + 1).call();\n                console.log(token.token);\n                console.log(goodsNFTContract._address);\n                if (token.token == goodsNFTContract._address) {\n                    console.log(true);\n                    tokenURI = await goodsNFTContract.methods.tokenURI(Number(tokensOnSale[i].tokenId)).call();\n                } else {\n                    console.log(false);\n                    tokenURI = await pradaNFTContract.methods.tokenURI(Number(tokensOnSale[i].tokenId)).call();\n                }\n                // const tokenURI = await goodsNFTContract.methods.tokenURI(Number(tokensOnSale[i].tokenId)).call();\n                tokenList.push({\n                    \"tokenId\": Number(token.tokenId),\n                    \"seller\": token.seller,\n                    \"token\": token.token,\n                    \"price\": Number(token.price),\n                    \"picture\": ifpsToPicture.get(tokenURI),\n                    \"buy\": \"Buy Now!\",\n                    \"number\": i + 1,\n                    \"status\": Number(token.status)\n                });\n            }\n        // setNftsForSale(tokenList);\n        } catch (error) {\n            console.error(error);\n            alert(\"Failed to load!\");\n        }\n    }\n    return tokenList;\n};\nconst buyNft = async (listId, price)=>{\n    try {\n        await marketContract.methods.buyToken(listId).send({\n            from: account,\n            value: price\n        });\n    } catch (error) {\n        console.error(error);\n        alert(\"Failed to load!\");\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/Web3Client.js\n"));

/***/ })

});